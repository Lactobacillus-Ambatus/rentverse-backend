// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  phone     String?
  password  String
  role      Role     @default(USER)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  properties Property[]
  bookings   Booking[]

  @@map("users")
}

model Property {
  id          String        @id @default(uuid())
  title       String
  description String?
  address     String
  city        String
  state       String
  zipCode     String
  price       Decimal       @db.Decimal(10, 2)
  type        PropertyType
  bedrooms    Int           @default(0)
  bathrooms   Int           @default(0)
  area        Float?
  isAvailable Boolean       @default(true)
  images      String[]      @default([])
  amenities   String[]      @default([])
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  // Relations
  owner    User      @relation(fields: [ownerId], references: [id])
  ownerId  String
  bookings Booking[]

  @@map("properties")
}

model Booking {
  id          String        @id @default(uuid())
  startDate   DateTime
  endDate     DateTime
  totalPrice  Decimal       @db.Decimal(10, 2)
  status      BookingStatus @default(PENDING)
  notes       String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  // Relations
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  property   Property @relation(fields: [propertyId], references: [id])
  propertyId String

  @@map("bookings")
}

enum Role {
  USER  
  ADMIN
  LANDLORD
}

enum PropertyType {
  APARTMENT
  HOUSE
  STUDIO
  CONDO
  VILLA
  ROOM
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}
